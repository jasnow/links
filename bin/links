#!/usr/bin/env ruby
require "links"
require "rainbow"
require 'getoptlong'

opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--version', '-v', GetoptLong::NO_ARGUMENT ],
  [ '--bulk', '-b', GetoptLong::REQUIRED_ARGUMENT ]
)

trap("INT") { puts '['+'INTERRUPTED'.color(:red)+']'; exit -1 }
list=[]

opts.each do |opt, arg|
  case opt
  when '--help'
    puts "usage: links [-bvh] [filename]"
    puts "   -b filename: loads the url list from a plain text file"
    puts "   -v : shows version information"
    puts "   -h : shows this help"
    exit 0
  when '--version'
    puts "links #{Links::Version.version}"
    exit 0
  when '--bulk'
    if ! File.exists?(arg)
      puts "links: file not found (#{arg})".color(:red)
      exit 1
    end
    list = File.open(arg).readlines
    if list.count <= 0
      puts "links: invalid url list".color(:red)
      exit 1
    end
  end
end

if list.count == 0
  list<<ARGV[0]
end

list.each do |l|
  print "#{l}:".color(:white)
  code = Links::Api.human(l)
  case code
  when "Open"
    print " #{code}\n".color(:green)
  when "Non existent"
    print " #{code}\n".color(:red)
  when "Closed"
    print " #{code}\n".color(:red)
  else
    print " #{code}\n".color(:yellow)
  end

  if code == 301
    new_link = Links::Api.follow(l)
    printf "following from #{l} to #{new_link}\n".color(:grey)
    code = Links::Api.human(l)
    case code
    when "Open"
      print " #{code}\n".color(:green)
    when "Non existent"
      print " #{code}\n".color(:red)
    when "Closed"
      print " #{code}\n".color(:red)
    else
      print " #{code}\n".color(:yellow)
    end

  end

end
